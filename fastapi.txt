// Install fastApi framework and all its dependencies
pip install fastapi[all]

// Connect our app to uvicorn server
uvicorn api.main:app --reload

// Create a schema

// Implement Routes and CRUD functions

// Implement database
postgresql.org(Nickoch96)
pgAdmin4
pip install psycopg2

// Implement an ORM(sqlalchemy)
install sqlalchemy(1.4)
create a databasee.py file to handle db connections

// Implement user authentication
pip install passlib[bcrypt]
pip install python-jose[cryptography]

// implement token authentication(6.32)

// Link users to posts
// database migration tool
pip install alembic
// Configure CORS
// Set up git

// Deploy to render
Set up a postgresql db

dpg-cphceoe3e1ms73d56hm0-a
prod_postgres_db_sah7
2dKeA55Io3WbYiHQB164mbZT0CTD41v5
postgres://nick:2dKeA55Io3WbYiHQB164mbZT0CTD41v5@dpg-cphceoe3e1ms73d56hm0-a.oregon-postgres.render.com/prod_postgres_db_sah7

http://127.0.0.0.1:8000

Deploy your fastApi Backend to render
Introduction
Create a render account
Prepare our local environmen for production:
    create a .env file
    create a requirements.txt file
    Initializa a repo and push your code to github
    Create a build.sh file
Login into your render account
Create a postgresql db
Create a new web service
Conclusion
